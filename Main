def afficher_sudoku(grille):
    for i in range(9):
        if i % 3 == 0 and i != 0:
            print("- - - - - - - - - - -")
        for j in range(9):
            if j % 3 == 0 and j != 0:
                print("|", end=" ")
            print(grille[i][j] if grille[i][j] != 0 else ".", end=" ")
        print()

def est_valide(grille, ligne, colonne, num):
    # Vérifie la ligne
    for i in range(9):
        if grille[ligne][i] == num:
            return False

    for i in range(9):
        if grille[i][colonne] == num:
            return False

    start_ligne, start_colonne = 3 * (ligne // 3), 3 * (colonne // 3)
    for i in range(3):
        for j in range(3):
            if grille[start_ligne + i][start_colonne + j] == num:
                return False

    return True

def trouver_case_vide(grille):
    for i in range(9):
        for j in range(9):
            if grille[i][j] == 0:
                return (i, j) 
    return None 

def resoudre_sudoku(grille):
    case_vide = trouver_case_vide(grille)
    if not case_vide:
        return True 

    ligne, colonne = case_vide

    for num in range(1, 10): 
        if est_valide(grille, ligne, colonne, num):
            grille[ligne][colonne] = num  

            if resoudre_sudoku(grille): 
                return True

            grille[ligne][colonne] = 0  

    return False  
grille = [
    [5, 3, 0, 0, 7, 0, 0, 0, 0],
    [6, 0, 0, 1, 9, 5, 0, 0, 0],
    [0, 9, 8, 0, 0, 0, 0, 6, 0],
    [8, 0, 0, 0, 6, 0, 0, 0, 3],
    [4, 0, 0, 8, 0, 3, 0, 0, 1],
    [7, 0, 0, 0, 2, 0, 0, 0, 6],
    [0, 6, 0, 0, 0, 0, 2, 8, 0],
    [0, 0, 0, 4, 1, 9, 0, 0, 5],
    [0, 0, 0, 0, 8, 0, 0, 7, 9]
]

print("Grille de Sudoku initiale :")
afficher_sudoku(grille)

if resoudre_sudoku(grille):
    print("\nGrille de Sudoku résolue :")
    afficher_sudoku(grille)
else:
    print("\nAucune solution trouvée.")
